X <- data.frame(x = c(1, 3, 50), px = c(0.75, 0.2 , 0.05))
X <- data.frame(x = c(1, 3, 50), px = c(0.75, 0.2 , 0.05))
Ex = sum(X$x * X$px)
Ex2 = sum(X$x^2 * X$px)
Ex2
Vx = Ex2 - Ex^2
Vx
#Poisson: En = Vn = lambda = 20
En = Vn = 20
Es = En * Ex
Es
Vs = En * Vx + Ex^2 * Vn
Vs
Ds
Cvs = Ds/Es
Cvs
Es = En * Ex
Es
Vs = En * Vx + Ex^2 * Vn
Vs
Ds = sqrt(Vs)
Ds
Cvs = Ds/Es
Cvs
#qnorm encontra o valor de 0.975 na tabela da normal
teta = qnorm(0.975) * Cvs
teta
Pp = Es * (1 + teta)
Pp
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)
N
N
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)
N
View(N)
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)
N
n <- c(0:8)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)
N
View(N)
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)
N
n <- c(0:100)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)
N
hist(N)
hist(pn)
hist(pn, breaks = 100)
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)
N
hist(pn, breaks = 10)
n <- c(0:10)
pn <- dpois(n, lambda = 1)
pn
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
library(actuar)
options(scipen=999)
X <- data.frame(x = c(1, 3), px = c(0.8, 0.2))
X
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:3)
summary(FS)
var(FS(0:3))
sd(FS(0:3))
fS <- diff(FS)
fS
FS(0:10)
FS(0:7)
FS(0:6)
summary(FS)
summary(FS)
FS(0:6)
var(FS(0:6))
sd(FS(0:6))
fS <- diff(FS)
fS
X <- data.frame(x = c(1, 3, 50), px = c(0.75, 0.2 , 0.05))
Ex = sum(X$x * X$px)
Ex
Ex2 = sum(X$x^2 * X$px)
Ex2
Vx = Ex2 - Ex^2
Vx
#Poisson: En = Vn = lambda = 20
En = Vn = 20
Es = En * Ex
Es
Vs = En * Vx + Ex^2 * Vn
Vs
Ds = sqrt(Vs)
Ds
Cvs = Ds/Es
Cvs
#qnorm encontra o valor de 0.975 na tabela da normal
teta = qnorm(0.975) * Cvs
teta
Pp = Es * (1 + teta)
Pp
library(actuar)
options(scipen=999)
X <- data.frame(x = c(1, 3), px = c(0.8, 0.2))
X
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:6)
summary(FS)
var(FS(0:6))
sd(FS(0:6))
fS <- diff(FS)
fS
new.env(Q1)
Q1 = new.env()
Questao1 = new.env()
View(Questao1)
Questao1
X <- data.frame(x = c(1, 3, 50), px = c(0.75, 0.2 , 0.05))
Ex = sum(X$x * X$px)
Ex
Ex2 = sum(X$x^2 * X$px)
Ex2
Vx = Ex2 - Ex^2
Vx
X <- data.frame(x = c(1, 3, 50), px = c(0.75, 0.2 , 0.05))
X <- data.frame(x = c(1, 3, 50), px = c(0.75, 0.2 , 0.05))
Ex = sum(X$x * X$px)
Ex
Ex2 = sum(X$x^2 * X$px)
Ex2
Vx = Ex2 - Ex^2
Vx
#Poisson: En = Vn = lambda = 20
En = Vn = 20
Es = En * Ex
Es
Vs = En * Vx + Ex^2 * Vn
Vs
Ds = sqrt(Vs)
Ds
Cvs = Ds/Es
Cvs
#qnorm encontra o valor de 0.975 na tabela da normal
teta = qnorm(0.975) * Cvs
teta
Pp = Es * (1 + teta)
Pp
library(actuar)
options(scipen=999)
x <- data.frame(x = c(1, 3), px = c(0.8, 0.2))
x
x <- data.frame(x = c(1, 3), px = c(0.8, 0.2))
x
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:6)
FS(0:10)
FS(0:9)
summary(FS)
var(FS(0:9))
sd(FS(0:9))
fS <- diff(FS)
fS
X <- data.frame(x = c(1, 3, 50), px = c(0.75, 0.2 , 0.05))
Ex = sum(X$x * X$px)
Ex2 = sum(X$x^2 * X$px)
Vx = Ex2 - Ex^2
X     #Severidade da carteira
Ex     #Esperança de X
Ex2    #Esperança de X²
Vx     #Variancia de X
Es     #Esperança do Sinistro Coletivo Agregado
Vs     #Variancia do Scol
Ds     #Desvio padrão de Scol
Cvs     #Coeficiente de variacão de Scol
X <- data.frame(x = c(1, 3, 50), px = c(0.75, 0.2 , 0.05))
Ex = sum(X$x * X$px)
Ex2 = sum(X$x^2 * X$px)
Vx = Ex2 - Ex^2
X     #Severidade da carteira
Ex     #Esperança de X
Ex2    #Esperança de X²
Vx     #Variância de X
#Poisson: En = Vn = lambda = 20
En = Vn = 20 #Esperança e variancia da carteira
#Poisson: En = Vn = lambda = 20
En = Vn = 20 #Esperança e variancia da carteira
Es = En * Ex
Vs = En * Vx + Ex^2 * Vn
Ds = sqrt(Vs)
Cvs = Ds/Es
??option
?option
help("option")
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
N
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
n <- c(0:)
n <- c()
pn <- dpois(n, lambda = 1)
n <- c(0:10)
pn <- dpois(n, lambda = 1)
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
library(actuar)     #ativando o pacote "actuar"
options(scipen=999)
#"option" Permita que o usuário defina e examine uma variedade de opções globais que afetam a maneira como R calcula e exibe seus resultados.
#"scipen" Uma penalidade a ser aplicada ao decidir imprimir valores numéricos em notação fixa ou exponencial.
x <- data.frame(x = c(1, 3), px = c(0.8, 0.2))   #cria uma matriz, uma coluna são os valores da severidade e a outra a probabilidade que ela ocorre.
x
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:10)
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:9)
n <- c(0:100)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:9)
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:50)
n <- c(0:100)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
n <- c(0:1)
n <- c(0:1)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:50)
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
n <- c(0:9)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:50)
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:9)
n <- c(0:9)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:9)
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:9)
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:9)
summary(FS)
var(FS(0:9))
sd(FS(0:9))
n <- c(0:2)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:9)
n <- c(0:10)
pn <- dpois(n, lambda = 1)
N <- data.frame(n = n, pn = pn)    #cria uma matriz, uma coluna são a frequência dos sinistros e a outra a probabilidade que ela ocorre.
N
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:9)
FS <-
aggregateDist(
method = "convolution",
model.freq = N$pn,
model.sev = X$px,
x.scale = 1
)
FS(0:9)
summary(FS)
var(FS(0:9))
sd(FS(0:9))
summary(FS)
var(FS(0:9))
sd(FS(0:9))
fS <- diff(FS)
fS
fS(0:3)
fS(0:3)
fS <- diff(FS(0:3))
fS(0:3)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
