Vx   #Variancia dos valores de x
Dpx   #Desvio padrão dos valores de x
CVx   #Coeficiente de variação de x
En <- mean(n)
Vn <- var(n)
Dpn <- sd(n)
CVn <- Dpn / En
En   #Média dos valores de n
Vn   #Variancia dos valores de n
Dpn   #Desvio padrão dos valores de n
CVn   #Coeficiente de variação de s
Es <- (En*Ex)
Vs <- (En*Vx)+(Ex)^2*Vn
Ds <- sqrt(Vs)
CVs <- Ds/Es
Es   #Média dos valores de S
Vs   #Variancia dos valores de S
Ds   #Desvio padrão dos valores de S
CVs   #Desvio padrão dos valores de S
PP1 = Es+qnorm(1-0.01)*Ds
PP1
PP5 = Es+qnorm(1-0.05)*Ds
PP5
PP10 = Es+qnorm(1-0.10)*Ds
PP10
Ex <- mean(x)
Ex
Vx <- var(x)
Vx
x
Ex <- mean(x)
Vx <- var(x)
Ex <- mean(x)
Vx <- var(x)
#Criando os objetos m1, m2 e m3:
#Para evitar o erro de falta de objetos
m1 = c()
m2 = c()
m3 = c()
#Transformando a media observada em m1
m1 <- Ex
m1
#Transformando a variancia observada em m3
m3 <- Vx
m3
a = ((m1)^2)/m3
a
b = m1/m3
b
Ex <- mean(x)
Vx <- var(x)
Ex
Vx
#Criando os objetos m1, m2 e m3:
#Para evitar o erro de falta de objetos
m1 = c()
m2 = c()
m3 = c()
#Transformando a media observada em m1
m1 <- Ex
m1
#Transformando a variancia observada em m3
m3 <- Vx
m3
a = ((m1)^2)/m3
a
b = m1/m3
b
x
Ex <- mean(x)
Vx <- var(x)
Dpx <- sd(x)
CVx <- Dpx / Ex
Ex   #Média dos valores de x
Vx   #Variancia dos valores de x
Dpx   #Desvio padrão dos valores de x
CVx   #Coeficiente de variação de x
#Dados[[1]][,2] = Primeiro da lista, segunda coluna
S=sum((dados[[1]][,2]), (dados[[3]][,2]), (dados[[4]][,2]), (dados[[5]][,2]), (dados[[6]][,2]), (dados[[7]][,2]), (dados[[8]][,2]), (dados[[9]][,2]), (dados[[10]][,2]), (dados[[11]][,2]), (dados[[12]][,2]))
S
setwd("D:/Google Drive/2 - Ufpb/P5/Teoria/Prova/")
#transformando dados em uma lista de tamanho 12, onde onde lista está entre 1 e 12
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
#visualizando as listas
dados
#S é uma lista? com 12 informações
S=c()
N=c()
N=numeric(i)
S=numeric(i)
#Os valores separados de x na ordem do banco de dados
x <-c((dados[[1]][,2]), (dados[[3]][,2]), (dados[[4]][,2]), (dados[[5]][,2]), (dados[[6]][,2]), (dados[[7]][,2]), (dados[[8]][,2]), (dados[[9]][,2]), (dados[[10]][,2]), (dados[[11]][,2]), (dados[[12]][,2]))
#Os valores separados de n na ordem dos banco de dados
n <-c((dados[[1]][,1]), (dados[[3]][,1]), (dados[[4]][,1]), (dados[[5]][,1]), (dados[[6]][,1]), (dados[[7]][,1]), (dados[[8]][,1]), (dados[[9]][,1]), (dados[[10]][,1]), (dados[[11]][,1]), (dados[[12]][,1]))
#Dados[[1]][,2] = Primeiro da lista, segunda coluna
S=sum((dados[[1]][,2]), (dados[[3]][,2]), (dados[[4]][,2]), (dados[[5]][,2]), (dados[[6]][,2]), (dados[[7]][,2]), (dados[[8]][,2]), (dados[[9]][,2]), (dados[[10]][,2]), (dados[[11]][,2]), (dados[[12]][,2]))
S
Ex <- mean(x)
Vx <- var(x)
Dpx <- sd(x)
CVx <- Dpx / Ex
Ex   #Média dos valores de x
Vx   #Variancia dos valores de x
Dpx   #Desvio padrão dos valores de x
CVx   #Coeficiente de variação de x
En <- mean(n)
Vn <- var(n)
Dpn <- sd(n)
CVn <- Dpn / En
En   #Média dos valores de n
Vn   #Variancia dos valores de n
Dpn   #Desvio padrão dos valores de n
CVn   #Coeficiente de variação de s
Es <- (En*Ex)
Vs <- (En*Vx)+(Ex)^2*Vn
Ds <- sqrt(Vs)
CVs <- Ds/Es
Es   #Média dos valores de S
Vs   #Variancia dos valores de S
Ds   #Desvio padrão dos valores de S
CVs   #Desvio padrão dos valores de S
PP1 = Es+qnorm(1-0.01)*Ds
PP1
PP5 = Es+qnorm(1-0.05)*Ds
PP5
PP10 = Es+qnorm(1-0.10)*Ds
PP10
help(rbinom)
rbinom(100, 5, 6)
#S é uma lista? com 12 informações
S=c()
N=c()
N=numeric(12)
S=numeric(12)
for(i in 1:12)
N[i]=dim(dados[[i]])[1]
S[i]=sum(dados[[i]][,2])
setwd("D:/Google Drive/2 - Ufpb/P5/Teoria/Prova/")
#transformando dados em uma lista de tamanho 12, onde onde lista está entre 1 e 12
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
#visualizando as listas
dados
#S é uma lista? com 12 informações
S=c()
N=c()
N=numeric(12)
S=numeric(12)
for(i in 1:12)
#S é uma lista? com 12 informações
S=c()
N=c()
N=numeric(12)
S=numeric(12)
#Para encontrar resultados mensais
N[i]=dim(dados[[i]])[1]
S[i]=sum(dados[[i]][,2])
#Para encontrar resultados mensais
N[i]=dim(dados[[i]])[1,])
#Para encontrar resultados mensais
N[i]=dim(dados[[i]][1,])
S[i]=sum(dados[[i]][,2])
#outra forma de calcular S
S1=NULL
S1=c(S1,dados[[i]][,2])
#outra forma de calcular S
S1=NULL
S1=c(S1,dados[[i]][,2])
S1
#outra forma de calcular S
S1=NULL
S1=c(S1,dados[[i]][,2])
S1
En <- mean(n)
Vn <- var(n)
Dpn <- sd(n)
CVn <- Dpn / En
En   #Média dos valores de n
Vn   #Variancia dos valores de n
Dpn   #Desvio padrão dos valores de n
CVn   #Coeficiente de variação de s
#outra forma de calcular S
S1=NULL
for(i in 1:12){
S1=c(S1,dados[[i]][,2])
}
#outra forma de calcular S
S1=NULL
for(i in 1:12){
S1=c(S1,dados[[i]][,2])
}
setwd("D:/Google Drive/2 - Ufpb/P5/Teoria/Prova/")
#transformando dados em uma lista de tamanho 12, onde onde lista está entre 1 e 12
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
#visualizando as listas
dados
#S é uma lista? com 12 informações
S=c()
N=c()
N=numeric(12)
S=numeric(12)
#Os valores separados de x na ordem do banco de dados
#falta o mes 2
x <-c((dados[[1]][,2]), (dados[[3]][,2]), (dados[[4]][,2]), (dados[[5]][,2]), (dados[[6]][,2]), (dados[[7]][,2]), (dados[[8]][,2]), (dados[[9]][,2]), (dados[[10]][,2]), (dados[[11]][,2]), (dados[[12]][,2]))
#Os valores separados de n na ordem dos banco de dados
n <-c((dados[[1]][,1]), (dados[[3]][,1]), (dados[[4]][,1]), (dados[[5]][,1]), (dados[[6]][,1]), (dados[[7]][,1]), (dados[[8]][,1]), (dados[[9]][,1]), (dados[[10]][,1]), (dados[[11]][,1]), (dados[[12]][,1]))
#outra forma de calcular S
S1=NULL
for(i in 1:12){
S1=c(S1,dados[[i]][,2])
}
#outra forma de calcular S
S1=NULL
for(i in 1:12){
S1=c(S1,dados[[i]][,2])
}
S1=c(S1,dados[[i]][,2])
{
S1=c(S1,dados[[i]][,2])
}
dados[[1]][,2]
dados[[i]][,2]
S1=NULL
#outra forma de calcular S
S1=NULL
for(i in 1:12)
S1=c(S1,dados[[i]][,2])
#outra forma de calcular S
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
S1=NULL
for(i in 1:12)
S1=c(S1,dados[[i]][,2])
#outra forma de calcular S
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
S1=NULL
for(i in 1:12)
S1=c(S1,dados[[i]][,2])
#outra forma de calcular S
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
S1=NULL
for(i in 1:12)
S1=c(S1, dados[[i]][,2])
#outra forma de calcular S
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
xdados=NULL
for(i in 1:12){
xdados=c(xdados,dados[[i]][,2])
}
xdados=c(xdados,dados[[2]][,2])
#outra forma de calcular S
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
xdados=NULL
for(i in 1:12){
xdados=c(xdados,dados[[2]][,2])
}
#outra forma de calcular S
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
xdados=NULL
for(i in 1:12){
xdados=c(xdados,dados[[1]][,2])
}
#outra forma de calcular S
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
xdados=NULL
for(i in 1:12){
xdados=c(xdados,dados[[3]][,2])
}
xdados
#Para encontrar resultados mensais
N[i]=dim(dados[[i]][1,])
S[i]=sum(dados[[i]][,2])
S[2]
S = list(dados[[1]][,2],dados[[3]][,2])
S
S = m1+m2
S
m1 = (dados[[1]][,2])
m2 = (dados[[3]][,2])
Z = m1+m2
Z
Es   #Média dos valores de S
Vs   #Variancia dos valores de S
Ds   #Desvio padrão dos valores de S
CVs   #Desvio padrão dos valores de S
setwd("D:/Google Drive/2 - Ufpb/P5/Teoria/Prova/")
#transformando dados em uma lista de tamanho 12, onde onde lista está entre 1 e 12
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
#visualizando as listas
dados
#S é uma lista? com 12 informações
S=c()
N=c()
N=numeric(12)
S=numeric(12)
#Os valores separados de x na ordem do banco de dados
#falta o mes 2
x <-c((dados[[1]][,2]), (dados[[3]][,2]), (dados[[4]][,2]), (dados[[5]][,2]), (dados[[6]][,2]), (dados[[7]][,2]), (dados[[8]][,2]), (dados[[9]][,2]), (dados[[10]][,2]), (dados[[11]][,2]), (dados[[12]][,2]))
#Os valores separados de n na ordem dos banco de dados
n <-c((dados[[1]][,1]), (dados[[3]][,1]), (dados[[4]][,1]), (dados[[5]][,1]), (dados[[6]][,1]), (dados[[7]][,1]), (dados[[8]][,1]), (dados[[9]][,1]), (dados[[10]][,1]), (dados[[11]][,1]), (dados[[12]][,1]))
#Dados[[1]][,2] = Primeiro da lista, segunda coluna
S=sum((dados[[1]][,2]), (dados[[3]][,2]), (dados[[4]][,2]), (dados[[5]][,2]), (dados[[6]][,2]), (dados[[7]][,2]), (dados[[8]][,2]), (dados[[9]][,2]), (dados[[10]][,2]), (dados[[11]][,2]), (dados[[12]][,2]))
S
Ex <- mean(x)
Vx <- var(x)
Dpx <- sd(x)
CVx <- Dpx / Ex
Ex   #Média dos valores de x
Vx   #Variancia dos valores de x
Dpx   #Desvio padrão dos valores de x
CVx   #Coeficiente de variação de x
En <- mean(n)
Vn <- var(n)
Dpn <- sd(n)
CVn <- Dpn / En
En   #Média dos valores de n
Vn   #Variancia dos valores de n
Dpn   #Desvio padrão dos valores de n
CVn   #Coeficiente de variação de s
Es <- (En*Ex)
Vs <- (En*Vx)+(Ex)^2*Vn
Ds <- sqrt(Vs)
CVs <- Ds/Es
Es   #Média dos valores de S
Vs   #Variancia dos valores de S
Ds   #Desvio padrão dos valores de S
CVs   #Desvio padrão dos valores de S
PP1 = Es+qnorm(1-0.01)*Ds
PP1
PP5 = Es+qnorm(1-0.05)*Ds
PP5
PP10 = Es+qnorm(1-0.10)*Ds
PP10
Ex <- mean(x)
Vx <- var(x)
Ex
Vx
#Criando os objetos m1, m2 e m3:
#Para evitar o erro de falta de objetos
m1 = c()
m2 = c()
m3 = c()
#Transformando a media observada em m1
m1 <- Ex
m1
#Transformando a variancia observada em m3
m3 <- Vx
m3
a = ((m1)^2)/m3
a
b = m1/m3
b
help(rbinom)
#o n deve ser iguais
rbinom(100, parametros)
ks.test(n, "gamma", a, b )
ks.test(n, "pbinom", a, b )
setwd("D:/Google Drive/2 - Ufpb/P5/Teoria/Prova/")
#transformando dados em uma lista de tamanho 12, onde onde lista está entre 1 e 12
dados=list()
length(dados)=12
for(i in 1:12)
dados[[i]]=read.csv(paste("grupo4am",i,".csv",sep=""))
#visualizando as listas
dados
#S é uma lista? com 12 informações
S=c()
N=c()
N=numeric(12)
S=numeric(12)
#Os valores separados de x na ordem do banco de dados
#falta o mes 2
x <-c((dados[[1]][,2]), (dados[[3]][,2]), (dados[[4]][,2]), (dados[[5]][,2]), (dados[[6]][,2]), (dados[[7]][,2]), (dados[[8]][,2]), (dados[[9]][,2]), (dados[[10]][,2]), (dados[[11]][,2]), (dados[[12]][,2]))
#Os valores separados de n na ordem dos banco de dados
n <-c((dados[[1]][,1]), (dados[[3]][,1]), (dados[[4]][,1]), (dados[[5]][,1]), (dados[[6]][,1]), (dados[[7]][,1]), (dados[[8]][,1]), (dados[[9]][,1]), (dados[[10]][,1]), (dados[[11]][,1]), (dados[[12]][,1]))
#Dados[[1]][,2] = Primeiro da lista, segunda coluna
S=sum((dados[[1]][,2]), (dados[[3]][,2]), (dados[[4]][,2]), (dados[[5]][,2]), (dados[[6]][,2]), (dados[[7]][,2]), (dados[[8]][,2]), (dados[[9]][,2]), (dados[[10]][,2]), (dados[[11]][,2]), (dados[[12]][,2]))
S
Ex <- mean(x)
Vx <- var(x)
Dpx <- sd(x)
CVx <- Dpx / Ex
Ex   #Média dos valores de x
Vx   #Variancia dos valores de x
Dpx   #Desvio padrão dos valores de x
CVx   #Coeficiente de variação de x
En <- mean(n)
Vn <- var(n)
Dpn <- sd(n)
CVn <- Dpn / En
En   #Média dos valores de n
Vn   #Variancia dos valores de n
Dpn   #Desvio padrão dos valores de n
CVn   #Coeficiente de variação de s
Es <- (En*Ex)
Vs <- (En*Vx)+(Ex)^2*Vn
Ds <- sqrt(Vs)
CVs <- Ds/Es
Es   #Média dos valores de S
Vs   #Variancia dos valores de S
Ds   #Desvio padrão dos valores de S
CVs   #Desvio padrão dos valores de S
PP1 = Es+qnorm(1-0.01)*Ds
PP1
PP5 = Es+qnorm(1-0.05)*Ds
PP5
PP10 = Es+qnorm(1-0.10)*Ds
PP10
ks.test(n, "pbinom", a, b )
Ex <- mean(x)
Vx <- var(x)
Ex
Vx
#Criando os objetos m1, m2 e m3:
#Para evitar o erro de falta de objetos
m1 = c()
m2 = c()
m3 = c()
#Transformando a media observada em m1
m1 <- Ex
m1
#Transformando a variancia observada em m3
m3 <- Vx
m3
a = ((m1)^2)/m3
a
b = m1/m3
b
help(rbinom)
#o n deve ser iguais
rbinom(100, parametros)
ks.test(n, "pgamma", a, b )
p=En/Vn
#parametro r da binomial
p=En/Vn
r = (En*p)/(1-p)
p
r
rbinom(10, ,r ,p)
rbinom(10,r ,p)
rbinom(10,r ,p)
rbinom(1000,r ,p)
rbinom(1000,r ,p)
rbinom(10,r,p)
rgamma(10,a,b)
#para gerar aleatoriamente
help(rbinom)
rbinom(10,r,p)
rgamma(10,a,b)
#parametro r da binomial
p = En/Vn
r = (En*p)/(1-p)
p
r
rbinom(10,r,p)
rgamma(10,a,b)
rbinom(10,p,r)
rgamma(10,a,b)
rbinom(10,10,p)
rbinom(10,10,p)
rbinom(r,10,p)
rgamma(10,a,b)
rbinom(r,10,p)
rbinom(10,r,p)
rnbinom(10,r,p)
rgamma(10,a,b)
#Teste de aderencia
ks.test(n, "pbinom", r, p )
ks.test(x, "pgamma", a, b)
#Teste de aderencia
ks.test(n, "pbinom", r, p )
ks.test(n, "rnbinom", r, p )
shapiro.test(n)
shapiro.test(x)
#parametro r da binomial
p = En/Vn
r = (En*p)/(1-p)
p
r
rnbinom(10,r,p)
rgamma(10,a,b)
