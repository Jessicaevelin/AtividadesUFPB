# Severidade $x$
esperanca.x <- mean(sin) ; esperanca.x
variancia.x <- var(sin); variancia.x
#Pacotes
library(readr)
library(fitdistrplus)
library(MASS)
library(actuar)
# Importação dos dados:
grupo4 <- read_csv("D:/Google Drive/6 - R/5- Estágio 2 - Prova da 3º Unidade/Dados/grupo4.csv",
col_types = cols(n = col_number(), x = col_number()))
# Importação dos dados:
grupo4 <- read_csv("D:/Google Drive/6 - R/5- Estágio 2 - Prova/Dados/grupo4.csv",
col_types = cols(n = col_number(), x = col_number()))
# Importação dos dados:
grupo4 <- read_csv("D:/Google Drive/6 - R/5 - Estágio 2 - Prova/Dados/grupo4.csv",
col_types = cols(n = col_number(), x = col_number()))
head(grupo4)
# Qual a dimensão do data frame?
dim(grupo4)
# separado apenas o x do data frame
sin <- grupo4$x #sin = sinistros(x)
head(sin)
#Pacotes
library(readr)
library(fitdistrplus)
library(MASS)
library(actuar)
# Importação dos dados:
grupo4 <- read_csv("D:/Google Drive/6 - R/5 - Estágio 2 - Prova/Dados/grupo4.csv",
col_types = cols(n = col_number(), x = col_number()))
head(grupo4)
# Qual a dimensão do data frame?
dim(grupo4)
# separado apenas o x do data frame
sin <- grupo4$x #sin = sinistros(x)
head(sin)
summary(sin) # estatísticas descritivas
sin_variancia <- var(sin); sin_variancia # variância
sin_desvio <- sd(sin); sin_desvio # desvio
sin_coefvar <- mean(sin)/sin_desvio ; sin_coefvar # coeficiente de variação dos sinistros
hist(sin, main = "Histograma dos sinistros", xlab = "Valores dos sinistros", ylab = "Frequência", breaks = 90)
# ajustes da distribuição:
descdist(sin)
# Estimando os parâmetros para normal,gamma,lognormal,weibull e pareto:
# Gamma e Pareto precisam do pacote actuar
fit.normal <- fitdist(sin, "norm")
fit.gamma <- fitdist(sin, distr = "gamma", method = "mle", lower = c(0, 0), start = list(scale = 1, shape = 1))
fit.lognormal <- fitdist(sin, "lnorm")
fit.weibull <- fitdist(sin, "weibull")
fit.pareto  <- fitdist(sin, "pareto", start = list(shape = 1, scale = 500))
# Parâmetros de cada distribuição:
summary(fit.normal)
summary(fit.gamma)
summary(fit.lognormal)
summary(fit.weibull)
summary(fit.pareto)
# dados empiricos
plotdist(sin, histo = TRUE, demp = TRUE)
# dados estimados
hist(sin, pch=20, breaks = 20, prob = TRUE, main = "")
curve(dnorm(x, fit.normal$estimate[1], fit.normal$estimate[2]), add = TRUE, col = "purple")
curve(dgamma(x, fit.gamma$estimate[1], fit.gamma$estimate[2]), add = TRUE, col = "blue")
curve(dlnorm(x, fit.lognormal$estimate[1], fit.lognormal$estimate[2]), add = TRUE, col = "red")
curve(dweibull(x, fit.weibull$estimate[1], fit.weibull$estimate[2]), add = TRUE, col = "orange")
curve(dpareto(x, fit.pareto$estimate[1], fit.pareto$estimate[2]), add = TRUE, col = "green")
#analisar qual distribuição se parece com o histograma dos dados:
par(mfrow=c(2,2))
plot.legend <- c("Normal", "Gamma", "Lognormal", "Weibull", "Pareto")
denscomp(list(fit.normal, fit.gamma, fit.lognormal, fit.weibull, fit.pareto), legendtext = plot.legend)
cdfcomp (list(fit.normal, fit.gamma, fit.lognormal, fit.weibull, fit.pareto), legendtext = plot.legend)
qqcomp  (list(fit.normal, fit.gamma, fit.lognormal, fit.weibull, fit.pareto), legendtext = plot.legend)
ppcomp  (list(fit.normal, fit.gamma, fit.lognormal, fit.weibull, fit.pareto), legendtext = plot.legend)
#Analisar com base o Kolmogorov-Smirnov statistic e Akaike's Information Criterion:
gofstat(list(fit.normal, fit.gamma, fit.lognormal, fit.weibull, fit.pareto), fitnames = c("Normal", "Gamma", "Lognormal", "Weibull", "Pareto"))
# Severidade $x$
esperanca.x <- mean(sin) ; esperanca.x
variancia.x <- var(sin); variancia.x
desvio.x <- sd(sin); desvio.x
coefvar.x <- desvio.x / esperanca.x ; coefvar.x
# Severidade $x$
esperanca.x <- mean(sin) ; esperanca.x
variancia.x <- var(sin); variancia.x
desvio.x <- sd(sin); desvio.x
coefvar.x <- desvio.x / esperanca.x ; coefvar.x
.
n = 10000
# Severidade "X"
esperanca.x <- mean(sin) ; esperanca.x
variancia.x <- var(sin); variancia.x
desvio.x <- sd(sin); desvio.x
coefvar.x <- desvio.x / esperanca.x ; coefvar.x
# Frequência "N" ~ Poisson (lambda = 4 )
lambda = 400
esperança.n = variancia.n = lambda
n = 10000
# Severidade "X"
esperanca.x <- mean(sin) ; esperanca.x
variancia.x <- var(sin); variancia.x
desvio.x <- sd(sin); desvio.x
coefvar.x <- desvio.x / esperanca.x ; coefvar.x
# Frequência "N" ~ Poisson (lambda = 4 )
lambda = 400
esperança.n = variancia.n = lambda ; esperança.n ; variancia.n
n = 10000
# Severidade "X"
esperanca.x <- mean(sin) ; esperanca.x
variancia.x <- var(sin); variancia.x
desvio.x <- sd(sin); desvio.x
coefvar.x <- desvio.x / esperanca.x ; coefvar.x
# Frequência "N" ~ Poisson (lambda = 4 )
lambda = 400
esperanca.n = variancia.n = lambda ; esperanca.n ; variancia.n
# Sinistro Agregado
esperanca.s = esperanca.n * esperanca.x
variancia.s = esperanca.n * variancia.x + (esperanca.x)^2 * variancia.n
Premiopuro
# Dados
tetha = 0.1
lambda = 400
n = 10000
# Severidade "X"
esperanca.x <- mean(sin)
esperanca.x
variancia.x <- var(sin)
variancia.x
desvio.x <- sd(sin)
desvio.x
coefvar.x <- desvio.x / esperanca.x
coefvar.x
# Frequência "N" ~ Poisson (lambda = 4 )
lambda = 400
esperanca.n = variancia.n = lambda
esperanca.n
variancia.n
# Sinistro Agregado
esperanca.s = esperanca.n * esperanca.x
esperanca.s
variancia.s = esperanca.n * variancia.x + (esperanca.x) ^ 2 * variancia.n
variancia.s
# Prêmio Puro
Premiopuro = esperanca.s * (1 + tetha)
Premiopuro
alpha = 0.35
premiocomercial = premiopuro / (1 - alpha)
# Dados
tetha = 0.1
lambda = 400
n = 10000
# Severidade "X"
esperanca.x <- mean(sin)
esperanca.x
variancia.x <- var(sin)
variancia.x
desvio.x <- sd(sin)
desvio.x
coefvar.x <- desvio.x / esperanca.x
coefvar.x
# Frequência "N" ~ Poisson (lambda = 4 )
lambda = 400
esperanca.n = variancia.n = lambda
esperanca.n
variancia.n
# Sinistro Agregado
esperanca.s = esperanca.n * esperanca.x
esperanca.s
variancia.s = esperanca.n * variancia.x + (esperanca.x) ^ 2 * variancia.n
variancia.s
# Prêmio Puro
premiopuro = esperanca.s * (1 + tetha)
premiopuro
alpha = 0.35
premiocomercial = premiopuro / (1 - alpha)
alpha = 0.35
premiocomercial = premiopuro / (1 - alpha)
premiocomercial
premiopuro
